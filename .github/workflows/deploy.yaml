name: Deploy
on:
  push:
    branches: [ master ]
    tags: [ v* ]
jobs:
  python-build:
    strategy:
      matrix:
        pyver:
          - "3.8"
          - "3.9"
          - "3.10"
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    env:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - run: git submodule update --init
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pyver }}
      - name: Build and test
        run: |
          python -m pip install -U pip setuptools wheel build
          python -m pip install -e .
          python -m unittest
      - name: Pack
        run: python -m build
      - if: matrix.os == 'ubuntu-latest'
        name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-py${{ matrix.pyver }}
          path: dist/*.tar.gz
      - if: matrix.os != 'ubuntu-latest'
        name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-py${{ matrix.pyver }}
          path: dist/*.whl
      - if: startsWith(github.ref, 'refs/tags/v')
        run: python -m pip install twine
      - if: startsWith(github.ref, 'refs/tags/v') && matrix.os == 'ubuntu-latest'
        name: Release
        run: python -m twine upload "dist/*.tar.gz" --skip-existing
      - if: startsWith(github.ref, 'refs/tags/v') && matrix.os != 'ubuntu-latest'
        name: Release
        run: python -m twine upload "dist/*.whl" --skip-existing
