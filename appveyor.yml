# AppVeyor for Pyslvs-UI
image: Visual Studio 2017

platform:
    - x64

environment:
    matrix:

        - MINGW_DIR: &mingw C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0
          MSYS_DIR: &msys2 C:\msys64
          PYTHON_DIR: C:\Python36-x64

        - MINGW_DIR: *mingw
          MSYS_DIR: *msys2
          PYTHON_DIR: C:\Python37-x64

install:
    # Environment variables
    - set Path=%MINGW_DIR%\mingw64\bin;%MSYS_DIR%\usr\bin;%Path%
    - set Path=%PYTHON_DIR%;%PYTHON_DIR%\Scripts;%Path%
    - set PYTHON_CFG=%PYTHON_DIR%\Lib\distutils\distutils.cfg

    # Show Python
    - python --version
    - pip --version

    # Upgrade setuptools
    - pip install setuptools -U

    # Set Python compiler to MinGW
    - echo [build]>> %PYTHON_CFG%
    - echo compiler=mingw32>> %PYTHON_CFG%
    - patch %PYTHON_DIR%\lib\distutils\cygwinccompiler.py platform\patch.diff
    - copy %PYTHON_DIR%\vcruntime140.dll %PYTHON_DIR%\libs

    # Install modules
    - pip install -r requirements.txt

    # Show tool kits
    - gcc --version
    - mingw32-make --version

before_build:
    # Clone submodules
    - git submodule update --init --recursive

build_script:
    - python setup.py install
    - python setup.py bdist_wheel

test_script:
    - python tests

artifacts:
    - path: dist\*.whl

deploy_script:
    - IF "%APPVEYOR_REPO_TAG%"=="true" (pip install twine)
         ELSE (echo deployment has been skipped as environment variable has not matched)
    - IF "%APPVEYOR_REPO_TAG%"=="true" (twine upload dist\*.whl --skip-existing)
